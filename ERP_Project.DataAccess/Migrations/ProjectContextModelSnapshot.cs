// <auto-generated />
using ERP_Project.DataAccess.Concrete.EntityFrameworkCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ERP_Project.DataAccess.Migrations
{
    [DbContext(typeof(ProjectContext))]
    partial class ProjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ERP_Project.Entity.Concrete.CalisanEntities.Calisan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<int>("CalisanKategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Fotograf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Soyadi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("CalisanKategoriId");

                    b.ToTable("Calisanlar");
                });

            modelBuilder.Entity("ERP_Project.Entity.Concrete.CalisanEntities.CalisanKategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("CalisanKategorileri");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adi = "İnsan Kaynakları"
                        },
                        new
                        {
                            Id = 2,
                            Adi = "Üretim"
                        },
                        new
                        {
                            Id = 3,
                            Adi = "Tedarik Zinciri"
                        },
                        new
                        {
                            Id = 4,
                            Adi = "Müşteri İlişkileri"
                        });
                });

            modelBuilder.Entity("ERP_Project.Entity.Concrete.CalisanEntities.Calisan", b =>
                {
                    b.HasOne("ERP_Project.Entity.Concrete.CalisanEntities.CalisanKategori", "CalisanKategori")
                        .WithMany("Calisanlar")
                        .HasForeignKey("CalisanKategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CalisanKategori");
                });

            modelBuilder.Entity("ERP_Project.Entity.Concrete.CalisanEntities.CalisanKategori", b =>
                {
                    b.Navigation("Calisanlar");
                });
#pragma warning restore 612, 618
        }
    }
}
